{"version":3,"sources":["lib/codes.js","App.js","index.js"],"names":["register_8bit","register_16bit","register_32bit","register_64bit","bit_length","register","includes","Error","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onConvertClick","alert","state","instruction","error","console","_this2","react_default","a","createElement","className","Input","action","content","onClick","size","focus","label","labelPosition","onChange","event","data","setState","value","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"oRACaA,EAAgB,CACzB,KAAM,KACN,KAAM,KACN,KAAM,KACN,KAAM,KACN,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAG7CC,EAAiB,CAC1B,KAAM,KAAM,KAAM,KAClB,KAAM,KAAM,KAAM,KAAM,KAAM,KAC9B,KAAM,KACN,KAAM,KACN,KACA,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAG7CC,EAAiB,CAC1B,MAAO,MAAO,MAAO,MACrB,MAAO,MACP,MAAO,MACP,MACA,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAG7CC,EAAiB,CAC1B,MAAO,MAAO,MAAO,MACrB,MAAO,MACP,MAAO,MACP,MACA,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,OA0GtCC,EAAa,SAAAC,GACtB,GAAIL,EAAcM,SAASD,GACvB,MAAO,OACX,GAAIJ,EAAeK,SAASD,GACxB,MAAO,QACX,GAAIH,EAAeI,SAASD,GACxB,MAAO,QACX,GAAIF,EAAeG,SAASD,GACxB,MAAO,QACX,MAAME,MAAK,sBCxGAC,6BAlCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMVQ,gBAAkB,WACd,IACIC,MAAMd,EAAWM,EAAKS,MAAMC,cAEhC,MAAOC,GACHC,QAAQD,MAAMA,KAVlBX,EAAKS,MAAQ,CACTC,YAAa,IAHFV,wEAgBV,IAAAa,EAAAV,KACL,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,OAAQ,CAAEC,QAAS,UAAWC,QAASlB,KAAKI,gBAAiBe,KAAM,QACnEC,OAAO,EACPC,MAAO,CAAEJ,QAAS,eAAgBE,KAAM,SACxCG,cAAc,OACdC,SAAU,SAACC,EAAOC,GAAR,OAAiBf,EAAKgB,SAAS,CAAEnB,YAAakB,EAAKE,SAC7DR,KAAK,iBA5BXS,cCFlBC,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5b0bb22a.chunk.js","sourcesContent":["\r\nexport const register_8bit = [\r\n    \"al\", \"ah\",\r\n    \"bl\", \"bh\",\r\n    \"cl\", \"ch\",\r\n    \"dl\", \"dh\",\r\n    \"spl\", \"bpl\", \"sil\", \"dil\",\r\n    \"r8b\", \"r9b\", \"r10b\", \"r11b\", \"r12b\", \"r13b\", \"r14b\", \"r15b\"\r\n]\r\n\r\nexport const register_16bit = [\r\n    \"ax\", \"bx\", \"cx\", \"dx\",\r\n    \"cs\", \"ds\", \"ss\", \"es\", \"fs\", \"gs\",\r\n    \"sp\", \"bp\",\r\n    \"si\", \"si\",\r\n    \"ip\",\r\n    \"r8w\", \"r9w\", \"r10w\", \"r11w\", \"r12w\", \"r13w\", \"r14w\", \"r15w\"\r\n]\r\n\r\nexport const register_32bit = [\r\n    \"eax\", \"ebx\", \"ecx\", \"edx\",\r\n    \"esp\", \"ebp\",\r\n    \"esi\", \"edi\",\r\n    \"eip\",\r\n    \"r8d\", \"r9d\", \"r10d\", \"r11d\", \"r12d\", \"r13d\", \"r14d\", \"r15d\",\r\n]\r\n\r\nexport const register_64bit = [\r\n    \"rax\", \"rbx\", \"rcx\", \"rdx\",\r\n    \"rsp\", \"rbp\",\r\n    \"rsi\", \"rdi\",\r\n    \"rip\",\r\n    \"r8\", \"r9\", \"r10\", \"r11\", \"r12\", \"r13\", \"r14\", \"r15\",\r\n]\r\n\r\nexport const register_op_32bit = {\r\n    al: \"000\", cl: \"001\", dl: \"010\", bl: \"011\",\r\n    ah: \"100\", ch: \"101\", dh: \"110\", bh: \"111\",\r\n    ax: \"000\", cx: \"001\", dx: \"010\", bx: \"011\",\r\n    eax: \"000\", ecx: \"001\", edx: \"010\", ebx: \"011\",\r\n    sp: \"100\", bp: \"101\",\r\n    esp: \"100\", ebp: \"101\",\r\n    si: \"110\", di: \"111\",\r\n    esi: \"110\", edi: \"111\"\r\n}\r\n\r\nexport const register_op_64bit = {\r\n    rax: \"000\", eax: \"000\", ax: \"000\", al: \"000\",\r\n    rcx: \"001\", ecx: \"001\", cx: \"001\", cl: \"001\",\r\n    rdx: \"010\", edx: \"010\", dx: \"010\", dl: \"010\",\r\n    rbx: \"011\", ebx: \"011\", bx: \"011\", bl: \"011\",\r\n    rsp: \"100\", esp: \"100\", sp: \"100\", ah: \"100\",\r\n    rbp: \"101\", ebp: \"101\", bp: \"101\", ch: \"101\",\r\n    rsi: \"110\", esi: \"110\", si: \"110\", dh: \"110\",\r\n    rdi: \"111\", edi: \"111\", di: \"111\", bh: \"111\",\r\n    r8: \"000\", r8d: \"000\", r8w: \"000\", r8b: \"000\",\r\n    r9: \"001\", r9d: \"001\", r9w: \"001\", r9b: \"001\",\r\n    r10: \"010\", r10d: \"010\", r10w: \"010\", r10b: \"010\",\r\n    r11: \"011\", r11d: \"011\", r11w: \"011\", r11b: \"011\",\r\n    r12: \"100\", r12d: \"100\", r12w: \"100\", r12b: \"100\",\r\n    r13: \"101\", r13d: \"101\", r13w: \"101\", r13b: \"101\",\r\n    r14: \"110\", r14d: \"110\", r14w: \"110\", r14b: \"110\",\r\n    r15: \"111\", r15d: \"111\", r15w: \"111\", r15b: \"111\",\r\n}\r\n\r\nexport const rm_16bit = {\r\n    \"bx si\": \"000\", \"bx di\": \"001\",\r\n    \"bp si\": \"010\", \"bp di\": \"011\",\r\n    \"si\": \"100\", \"di\": \"101\",\r\n    \"bp\": \"110\", \"bx\": \"111\",\r\n}\r\n\r\nexport const rm_32bit = {\r\n    eax: \"000\", ecx: \"001\", edx: \"010\", ebx: \"011\",\r\n    ebp: \"101\",\r\n    esi: \"110\", edi: \"111\",\r\n}\r\n\r\nexport const rm_32bit_base = {\r\n    eax: \"000\", ecx: \"001\", edx: \"010\", ebx: \"011\",\r\n    esp: \"100\", ebp: \"101\",\r\n    esi: \"110\", edi: \"111\",\r\n}\r\n\r\nexport const rm_32bit_64bit = {\r\n    eax: \"000\", ecx: \"001\", edx: \"010\", ebx: \"011\",\r\n    ebp: \"101\",\r\n    esi: \"110\", edi: \"111\",\r\n    r8d: \"000\", r9d: \"001\", r10d: \"010\", r11d: \"011\", r12d: \"100\", r13d: \"101\", r14d: \"110\", r15d: \"111\",\r\n}\r\n\r\nexport const rm_32bit_64bit_base = {\r\n    eax: \"000\", ecx: \"001\", edx: \"010\", ebx: \"011\",\r\n    esp: \"100\", ebp: \"101\",\r\n    esi: \"110\", edi: \"111\",\r\n    r8d: \"000\", r9d: \"001\", r10d: \"010\", r11d: \"011\", r12d: \"100\", r13d: \"101\", r14d: \"110\", r15d: \"111\",\r\n}\r\n\r\nexport const rm_64bit_64bit = {\r\n    rax: \"000\", rcx: \"001\", rdx: \"010\", rbx: \"011\",\r\n    rbp: \"101\",\r\n    rsi: \"110\", rdi: \"111\",\r\n    r8: \"000\", r9: \"001\", r10: \"010\", r11: \"011\", r12: \"100\", r13: \"101\", r14: \"110\", r15: \"111\",\r\n}\r\n\r\nexport const rm_64bit_64bit_base = {\r\n    rax: \"000\", rcx: \"001\", rdx: \"010\", rbx: \"011\",\r\n    rsp: \"000\", rbp: \"101\",\r\n    rsi: \"110\", rdi: \"111\",\r\n    r8: \"000\", r9: \"001\", r10: \"010\", r11: \"011\", r12: \"100\", r13: \"101\", r14: \"110\", r15: \"111\",\r\n}\r\n\r\nexport const rex_b = [\r\n    \"r8d\", \"r8\",\r\n    \"r9d\", \"r9\",\r\n    \"r10d\", \"r10\",\r\n    \"r11d\", \"r11\",\r\n    \"r12d\", \"r12\",\r\n    \"r13d\", \"r13\",\r\n    \"r14d\", \"r14\",\r\n    \"r15d\", \"r15\",\r\n]\r\n\r\nexport const rex_r = {\r\n    r8: \"000\", r8d: \"000\", r8w: \"000\", r8b: \"000\",\r\n    r9: \"001\", r9d: \"001\", r9w: \"001\", r9b: \"001\",\r\n    r10: \"010\", r10d: \"010\", r10w: \"010\", r10b: \"010\",\r\n    r11: \"011\", r11d: \"011\", r11w: \"011\", r11b: \"011\",\r\n    r12: \"100\", r12d: \"100\", r12w: \"100\", r12b: \"100\",\r\n    r13: \"101\", r13d: \"101\", r13w: \"101\", r13b: \"101\",\r\n    r14: \"110\", r14d: \"110\", r14w: \"110\", r14b: \"110\",\r\n    r15: \"111\", r15d: \"111\", r15w: \"111\", r15b: \"111\",\r\n}\r\n\r\nexport const scale = {\r\n    1: \"00\", 2: \"01\", 4: \"10\", 8: \"11\"\r\n}\r\n\r\nexport const bit_length = register => {\r\n    if (register_8bit.includes(register))\r\n        return \"8bit\";\r\n    if (register_16bit.includes(register))\r\n        return \"16bit\";\r\n    if (register_32bit.includes(register))\r\n        return \"32bit\";\r\n    if (register_64bit.includes(register))\r\n        return \"64bit\";\r\n    throw Error(`invalid $register`);\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport { Input, Button } from 'semantic-ui-react';\nimport { bit_length } from './lib/codes'\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            instruction: \"\"\n        }\n    }\n\n    _onConvertClick = () => {\n        try {\n            alert(bit_length(this.state.instruction))\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Input\n                        action={{ content: \"Convert\", onClick: this._onConvertClick, size: \"huge\" }}\n                        focus={true}\n                        label={{ content: \"Instruction:\", size: \"small\" }}\n                        labelPosition=\"left\"\n                        onChange={(event, data) => this.setState({ instruction: data.value })}\n                        size=\"big\"\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}